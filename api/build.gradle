buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.1"
    }
}

apply plugin: 'kotlin'
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: 'application'

mainClassName = "com.lunchometer.api.MainKt"

sourceSets {
    main.kotlin.srcDirs = [ 'src' ]
    main.resources.srcDirs = [ 'resources' ]
    test.kotlin.srcDirs = [ 'test' ]
}

repositories {
    jcenter()
    maven { url "https://kotlin.bintray.com/ktor" }
    maven { url "https://packages.confluent.io/maven/" }
    mavenCentral()
}

dependencies {
    compile project(':shared')
    compile project(':avro')

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-html-builder:$ktor_version"
    compile "io.ktor:ktor-auth-jwt:$ktor_version"
    compile "io.ktor:ktor-gson:$ktor_version"
    compile "io.ktor:ktor-locations:$ktor_version"
    compile "ch.qos.logback:logback-classic:$logback_version"
    compile 'io.github.microutils:kotlin-logging:1.5.4'
    compile "org.apache.kafka:kafka-streams:$kafka_version"
    compile "io.confluent:kafka-schema-registry:$confluent_version"
    compile "io.confluent:kafka-avro-serializer:$confluent_version"
    compile "io.confluent:kafka-streams-avro-serde:$confluent_version"

    testCompile "io.ktor:ktor-server-test-host:$ktor_version"
    testCompile "org.apache.kafka:kafka-streams-test-utils:$kafka_version"


    testCompile("org.junit.jupiter:junit-jupiter-api:$jupiter_version")
    testCompile("org.junit.jupiter:junit-jupiter-params:$jupiter_version")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:$jupiter_version")
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

kotlin.experimental.coroutines = 'enable'

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}


shadowJar {
    baseName = 'lunchometer'
    classifier = null
    version = null
}

task wrapper(type: Wrapper) {
    description = 'Generates gradlew[.bat] scripts'
    gradleVersion = '4.9'
}