buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.1"
    }
}

apply plugin: 'kotlin'
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: 'application'

mainClassName = "io.ktor.server.netty.DevelopmentEngine"

sourceSets {
    main.kotlin.srcDirs = [ 'src' ]
    main.resources.srcDirs = [ 'resources' ]
    test.kotlin.srcDirs = [ 'test' ]
}

mainClassName = "com.lunchometer.api.MainKt"

repositories {
    jcenter()
    maven { url "https://kotlin.bintray.com/ktor" }
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-html-builder:$ktor_version"
    compile "io.ktor:ktor-auth-jwt:$ktor_version"
    compile "io.ktor:ktor-gson:$ktor_version"
    compile group: 'com.google.code.gson', name: 'gson', version: '2.7'
    compile "ch.qos.logback:logback-classic:$logback_version"
    compile 'io.github.microutils:kotlin-logging:1.5.4'
    compile group: 'org.apache.kafka', name: 'kafka-streams', version: '1.1.0'
    // https://mvnrepository.com/artifact/org.json/json
    compile group: 'org.json', name: 'json', version: '20180130'

    compile project(':shared')
    testCompile "io.ktor:ktor-server-test-host:$ktor_version"
    // https://mvnrepository.com/artifact/org.apache.kafka/kafka-streams-test-utils
    testCompile group: 'org.apache.kafka', name: 'kafka-streams-test-utils', version: '2.0.0'

    testCompile('org.junit.jupiter:junit-jupiter-api:5.2.0')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')
}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
    }

    reports {
        html.enabled = true
    }
}

kotlin.experimental.coroutines = 'enable'

shadowJar {
    baseName = 'lunchometer'
    classifier = null
    version = null
}

task wrapper(type: Wrapper) {
    description = 'Generates gradlew[.bat] scripts'
    gradleVersion = '4.9'
}